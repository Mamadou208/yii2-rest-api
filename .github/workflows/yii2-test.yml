# GitHub Action for Yii Framework with MySQL
name: Testing
on:
    push:
        branches: [ master ]
    pull_request:
        branches: [ master ]
jobs:
    yii:
        name: Yii2 (PHP ${{ matrix.php-versions }})
        runs-on: ubuntu-latest
        env:
            DB_USERNAME: root
            DB_PASSWORD: root
            DB_CHARSET: utf8
        services:
            mysql:
                image: mysql:5.7
                env:
                    MYSQL_ALLOW_EMPTY_PASSWORD: false
                    MYSQL_ROOT_PASSWORD: root
                    MYSQL_DATABASE: yii2
                ports:
                    - 3306/tcp
                options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
        strategy:
            fail-fast: false
            matrix:
                php-versions: ['7.2']
                # php-versions: ['7.2', '7.3', '7.4']
        steps:
            -   name: Checkout
                uses: actions/checkout@v2

            -   name: Setup PHP, with composer and extensions
                uses: shivammathur/setup-php@v2 #https://github.com/shivammathur/setup-php
                with:
                    php-version: ${{ matrix.php-versions }}
                    extensions: mbstring, intl, gd, imagick, zip, dom, mysql
                    coverage: xdebug #optional

            -   name: Start mysql service
                run: sudo /etc/init.d/mysql start

            -   name: Get composer cache directory
                id: composercache
                run: echo "::set-output name=dir::$(composer config cache-files-dir)"

            -   name: Cache composer dependencies
                uses: actions/cache@v2
                with:
                    path: ${{ steps.composercache.outputs.dir }}
                    # Use composer.json for key, if composer.lock is not committed.
                    # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
                    key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
                    restore-keys: ${{ runner.os }}-composer-

            -   name: Install Composer dependencies
                run: composer install --no-progress --prefer-dist --optimize-autoloader

            -   name: Prepare the application
                run: |
                    php -r "file_exists('.env') || copy('.env.example', '.env');"
                    php yii generate/key

            -   name: Run Tests
                run: |
                    vendor/bin/codecept build
                    php yii migrate --interactive=0
                    nohup php -S localhost:8080 > yii.log 2>&1 &
                    vendor/bin/codecept run
